public class ContactTriggerHandler {

	public static void beforeInsert(List<Contact> newList) {

		// generate set of AccountIds associated with contact being added
		Set<Id> contactAccountIds = new Set<Id>();
		for (Contact c : newList) {
			contactAccountIds.add(c.AccountId);
		}

		// get any existing contacts associated with accountIds and add them to a map
		Map<Id, Contact> contactMap =	new Map<Id, Contact>();
		for (Contact c : [Select id, Primary_Contact__c, AccountId From Contact Where AccountId In :ContactAccountIds]) {
			contactMap.put(AccountId, c);
		}

		// check to see if new contact is marked primary
		for (Contact c : newList) {
			// if new contact is non-primary
			if (contactMap.get(c.accountId).isEmpty()) {
				c.Primary_Contact__c = true;
			}
			// new contact is marked primary
			else {
				c.Primay_Contact__c.addError('Invalid Primary Contact. This Account has an existing Primary Contact.');
			}
		}
	}
}

// When a new Non-Primary Contact is created and the Account related to the new Contact
// does not have any existing Contacts, the new Contact should automatically become the Account's Primary Contact.

// When a new Contact is created as a Primary Contact, the system should check if the Account 
// related to the new Contact does not yet have a Primary Contact. If the Account already has a Primary Contact, a message should be shown to the user stating: "Invalid Primary Contact. This Account has an existing Primary Contact.

// When an existing Non-Primary Contact is updated to become a Primary Contact, the system 
// should check if the Account related to the updated Contact does not yet have a Primary Contact. 
// If the Account already has a Primary Contact, a message should be shown to the user 
// stating: "Invalid Primary Contact. This Account has an existing Primary Contact.‚Äù
